{"name":"NDG (Nodejs-deploy-githook.bash)","tagline":"KISS automatic node deployment for VPS  (minimalist PAAS) node container bootstrapper in few lines of bash using only git & ssh","body":"NDG (node-deploy-githook.bash)\r\n==============================\r\n\r\n<img alt=\"\" src=\"https://github.com/coderofsalvation/nodejs-deploy-githook.bash/raw/master/ndg.png\"/>\r\n\r\nWant hasslefree deployment of multiple nodejs applications in one VPS or docker container?\r\n\r\nndg means KISS automatic node deployment for VPS (minimalist PAAS), node project bootstrapper in few lines of bash.\r\n\r\n> Zero dependencies: only bash git and ssh!\r\n\r\n## Usage\r\n\r\nOn the liveserver download & configure ndg on liveserver (once):\r\n\r\n    $ ssh foo@liveserver.com \r\n    $ ndg config repositories_dir /srv/noderepos    # location of gitrepos\r\n    $ ndg config apps_dir /srv/nodeapps             # where apps run\r\n\r\nLocally: Yay! now we can bootstrap node-projects remotly:\r\n\r\n    $ alias ndg='ssh foo@liveserver.com ndg \"$@\"'\r\n    $ ndg init fooproject 8111 http://foo.liveserver.com\r\n\r\n    ndg> Initialized empty Git repository in /srv/noderepos/fooproject\r\n    ndg> --- initing repo\r\n    ndg> --- initing .ndg/hooks/*\r\n    ndg> --- committing README.md, LICENSE and ndg hooks\r\n    ndg> [master (root-commit) 1870848] 1st commit\r\n    ndg> 5 files changed, 10 insertions(+)\r\n    ndg> create mode 100644 .gitignore\r\n    ndg> create mode 100755 .ndg/hooks/build\r\n    ndg> create mode 100755 .ndg/hooks/patch\r\n    ndg> create mode 100755 .ndg/hooks/test\r\n    ndg> create mode 100755 .ndg/hooks/start\r\n    ndg> create mode 100755 .ndg/hooks/stop\r\n    ndg> create mode 100644 LICENSE\r\n    ndg> create mode 100644 README.md\r\n    ndg> create mode 100644 package.json\r\n    ndg> --- pushing to origin\r\n    ndg> get    repo:    git clone foo@liveserver.com:/srv/noderepos/fooproject    \r\n    ndg> logview app:    ssh foo@liveserver.com tailf /srv/noderepos/fooproject/nohup.out\r\n    ndg> deploy  app:    git push origin master\r\n\r\n## Code locally, deploy to remote\r\n\r\n    $ git clone foo@liveserver.com:/srv/noderepos/fooproject\r\n\r\n    ...(code and commit)..\r\n\r\n    $ git push origin master\r\n\r\n    ...(yay! app is deployed, npm packages installed/updated, infinite application-loop started..)\r\n\r\nYour repo will contain a '.ndg'-folder with extra deploymenthooks..for free!\r\n\r\n## Manage remotely\r\n\r\n    $ alias ndg='ssh foo@liveserver.com ndg \"$@\"'\r\n    $ ndg status fooproject\r\n    app fooproject is running\r\n    $ ndg app list\r\n    ndg> fooproject\r\n    $ ndg app stop fooproject\r\n    $ ndg app start fooproject\r\n    $ ndg app restart fooproject\r\n    $ ndg app delete fooproject\r\n\r\n## Scalable instances\r\n\r\nExperimentl: Scaling can be achieved using symlinks \r\n\r\n    $ ndg app symlink fooproject fooproject-2 2345 http://fooproject-2.liveserver.com\r\n    $ ndg app start fooproject-2\r\n\r\n## Remote logging:\r\n\r\n    $ ndg app logtail fooproject \r\n    trigger .ndg/hooks/stop\r\n    Tue Apr 28 08:53:55 CEST 2015 stopping /srv/nodeapps/fooproject (pid 27474)\r\n    trigger .ndg/hooks/build\r\n    trigger .ndg/hooks/patch\r\n    trigger .ndg/hooks/test\r\n    Tue Apr 28 08:53:58 CEST 2015 starting /srv/nodeapps/fooproject at port 8111\r\n\r\n## App start during server reboot\r\n\r\nJust put this somewhere in an /etc/init.d/ script:\r\n\r\n    ndg app status projectfoo || ndg app start projectfoo\r\n\r\nAll apps at once:\r\n\r\n    for app in /srv/nodeapps/*; do \r\n      appname=$(basename $app)\r\n      ndg app status $appname || ndg app start $appname\r\n    done\r\n\r\n## Optional: ndg-proxy \r\n\r\nndg-proxy is a websocket/http proxy node application which allows running multiple node applications thru one port.\r\n\r\n    ndg app #1 @ port 1234 <---->\r\n    ndg app #2 @ port 1235 <---->  ndg-proxy @ port 80  <----- traffic\r\n    ndg app #3 @ port 1236 <---->\r\n\r\nndg-proxy reads the .ndg/config files from projects during start..easy peasy.\r\n\r\n> ndg + ndg-proxy: run containers in 1 container :)\r\n\r\n* more info on ndg-proxy: [https://github.com/coderofsalvation/ndg-proxy](https://github.com/coderofsalvation/ndg-proxy)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}